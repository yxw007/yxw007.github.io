import{_ as s,o as n,c as a,B as l}from"./app.27536372.js";const E=JSON.parse('{"title":"Nuxt 入门实战 - 13：docker 打包部署","description":"","frontmatter":{"title":"Nuxt 入门实战 - 13：docker 打包部署","author":"Potter","date":"2023-07-02T11:45:23.000Z","tags":["Nuxt"],"categories":["Nuxt 入门实战"]},"headers":[{"level":2,"title":"编写打包配置Dockerfile","slug":"编写打包配置dockerfile","link":"#编写打包配置dockerfile","children":[]},{"level":2,"title":"打包","slug":"打包","link":"#打包","children":[]},{"level":2,"title":"阿里云创建镜像仓库","slug":"阿里云创建镜像仓库","link":"#阿里云创建镜像仓库","children":[]},{"level":2,"title":"推送镜像至仓库","slug":"推送镜像至仓库","link":"#推送镜像至仓库","children":[]},{"level":2,"title":"启动服务","slug":"启动服务","link":"#启动服务","children":[]},{"level":2,"title":"自动化脚本","slug":"自动化脚本","link":"#自动化脚本","children":[]},{"level":2,"title":"参考文献","slug":"参考文献","link":"#参考文献","children":[]}],"relativePath":"article/04-practic/Nuxt/Nuxt 入门实战 - 13：docker 打包部署.md","lastUpdated":1717397637000}'),p={name:"article/04-practic/Nuxt/Nuxt 入门实战 - 13：docker 打包部署.md"},o=l(`<h1 id="nuxt-入门实战-13-docker-打包部署" tabindex="-1">Nuxt 入门实战 - 13：docker 打包部署 <a class="header-anchor" href="#nuxt-入门实战-13-docker-打包部署" aria-hidden="true">#</a></h1><h2 id="编写打包配置dockerfile" tabindex="-1">编写打包配置Dockerfile <a class="header-anchor" href="#编写打包配置dockerfile" aria-hidden="true">#</a></h2><blockquote><p>说明：Dockerfile 放置在项目根目录下</p></blockquote><div class="language-tsx"><button title="Copy Code" class="copy"></button><span class="lang">tsx</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#BABED8;"># use node </span><span style="color:#F78C6C;">16</span><span style="color:#BABED8;"> alpine image</span></span>
<span class="line"><span style="color:#BABED8;">FROM </span><span style="color:#FFCB6B;">node</span><span style="color:#89DDFF;">:</span><span style="color:#F78C6C;">16</span><span style="color:#89DDFF;">-</span><span style="color:#BABED8;">alpine </span><span style="color:#89DDFF;font-style:italic;">as</span><span style="color:#BABED8;"> </span><span style="color:#FFCB6B;">builder</span></span>
<span class="line"></span>
<span class="line"><span style="color:#BABED8;"># create work directory </span><span style="color:#89DDFF;">in</span><span style="color:#BABED8;"> app folder</span></span>
<span class="line"><span style="color:#BABED8;">WORKDIR </span><span style="color:#89DDFF;">/</span><span style="color:#BABED8;">app</span></span>
<span class="line"></span>
<span class="line"><span style="color:#BABED8;"># install required packages for node image</span></span>
<span class="line"><span style="color:#BABED8;">RUN apk </span><span style="color:#89DDFF;">--</span><span style="color:#BABED8;">no</span><span style="color:#89DDFF;">-</span><span style="color:#BABED8;">cache add openssh g</span><span style="color:#89DDFF;">++</span><span style="color:#BABED8;"> make python3 git</span></span>
<span class="line"></span>
<span class="line"><span style="color:#BABED8;"># change time zone</span></span>
<span class="line"><span style="color:#BABED8;">ENV TZ</span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;">Asia</span><span style="color:#89DDFF;">/</span><span style="color:#BABED8;">Shanghai \\ DEBIAN_FRONTEND</span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;">noninteractive</span></span>
<span class="line"><span style="color:#BABED8;">RUN apk add </span><span style="color:#89DDFF;">--</span><span style="color:#BABED8;">no</span><span style="color:#89DDFF;">-</span><span style="color:#BABED8;">cache tzdata</span></span>
<span class="line"><span style="color:#BABED8;">RUN ln </span><span style="color:#89DDFF;">-</span><span style="color:#BABED8;">snf </span><span style="color:#89DDFF;">/</span><span style="color:#BABED8;">usr</span><span style="color:#89DDFF;">/</span><span style="color:#BABED8;">share</span><span style="color:#89DDFF;">/</span><span style="color:#BABED8;">zoneinfo</span><span style="color:#89DDFF;">/</span><span style="color:#BABED8;">$TZ </span><span style="color:#89DDFF;">/</span><span style="color:#BABED8;">etc</span><span style="color:#89DDFF;">/</span><span style="color:#BABED8;">localtime </span><span style="color:#89DDFF;">&amp;&amp;</span><span style="color:#BABED8;"> echo $TZ </span><span style="color:#89DDFF;">&gt;</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">/</span><span style="color:#BABED8;">etc</span><span style="color:#89DDFF;">/</span><span style="color:#BABED8;">timezone</span></span>
<span class="line"></span>
<span class="line"><span style="color:#BABED8;"># copy over package</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">json files</span></span>
<span class="line"><span style="color:#BABED8;">COPY package</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">json </span><span style="color:#89DDFF;">/</span><span style="color:#BABED8;">app</span><span style="color:#89DDFF;">/</span></span>
<span class="line"><span style="color:#BABED8;">COPY pnpm</span><span style="color:#89DDFF;">-</span><span style="color:#BABED8;">lock</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">yaml </span><span style="color:#89DDFF;">/</span><span style="color:#BABED8;">app</span><span style="color:#89DDFF;">/</span></span>
<span class="line"></span>
<span class="line"><span style="color:#BABED8;"># install pnpm</span></span>
<span class="line"><span style="color:#BABED8;">RUN npm install </span><span style="color:#89DDFF;">-</span><span style="color:#BABED8;">g pnpm</span></span>
<span class="line"></span>
<span class="line"><span style="color:#BABED8;"># install all depencies</span></span>
<span class="line"><span style="color:#BABED8;">RUN npx pnpm i </span><span style="color:#89DDFF;">&amp;&amp;</span><span style="color:#BABED8;"> pnpm store prune</span></span>
<span class="line"><span style="color:#BABED8;">#RUN npx npm install</span></span>
<span class="line"></span>
<span class="line"><span style="color:#BABED8;"># copy over all files to the work directory</span></span>
<span class="line"><span style="color:#BABED8;">ADD </span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">/</span><span style="color:#BABED8;">app</span></span>
<span class="line"></span>
<span class="line"><span style="color:#BABED8;"># build the project</span></span>
<span class="line"><span style="color:#BABED8;">RUN npx pnpm build</span></span>
<span class="line"></span>
<span class="line"><span style="color:#BABED8;"># start final image</span></span>
<span class="line"><span style="color:#BABED8;">FROM </span><span style="color:#FFCB6B;">node</span><span style="color:#89DDFF;">:</span><span style="color:#F78C6C;">16</span><span style="color:#89DDFF;">-</span><span style="color:#BABED8;">alpine</span></span>
<span class="line"></span>
<span class="line"><span style="color:#BABED8;">WORKDIR </span><span style="color:#89DDFF;">/</span><span style="color:#BABED8;">app</span></span>
<span class="line"></span>
<span class="line"><span style="color:#BABED8;"># copy over build files from builder step</span></span>
<span class="line"><span style="color:#BABED8;">COPY </span><span style="color:#89DDFF;">--</span><span style="color:#BABED8;">from</span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;">builder </span><span style="color:#89DDFF;">/</span><span style="color:#BABED8;">app  </span><span style="color:#89DDFF;">/</span><span style="color:#BABED8;">app</span></span>
<span class="line"></span>
<span class="line"><span style="color:#BABED8;"># expose the host and port </span><span style="color:#F78C6C;">3000</span><span style="color:#BABED8;"> to the server</span></span>
<span class="line"><span style="color:#BABED8;">ENV HOST </span><span style="color:#F78C6C;">0.0</span><span style="color:#89DDFF;">.</span><span style="color:#F78C6C;">0.0</span></span>
<span class="line"><span style="color:#BABED8;">EXPOSE </span><span style="color:#F78C6C;">3000</span></span>
<span class="line"></span>
<span class="line"><span style="color:#BABED8;"># run the build project </span><span style="color:#89DDFF;font-style:italic;">with</span><span style="color:#BABED8;"> node</span></span>
<span class="line"><span style="color:#BABED8;">ENTRYPOINT [</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">node</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">.output/server/index.mjs</span><span style="color:#89DDFF;">&quot;</span><span style="color:#BABED8;">]</span></span>
<span class="line"></span></code></pre></div><h2 id="打包" tabindex="-1">打包 <a class="header-anchor" href="#打包" aria-hidden="true">#</a></h2><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#FFCB6B;">docker</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">build</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">-t</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">project_name:[tag]</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">.</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># example</span></span>
<span class="line"><span style="color:#FFCB6B;">docker</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">build</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">-t</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">nuxt_demo:0.0.1</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">.</span></span>
<span class="line"></span></code></pre></div><p>由于打出来是一个镜像，我们需要推送至远程镜像仓库，方便在服务器通过pull拉取镜像文件，所以我们创建阿里云镜像仓库（为啥不用hub.docker，因为根本没法用，经常登录不上）</p><h2 id="阿里云创建镜像仓库" tabindex="-1">阿里云创建镜像仓库 <a class="header-anchor" href="#阿里云创建镜像仓库" aria-hidden="true">#</a></h2><ul><li><p>创建仓库</p><p><img src="https://cdn.jsdelivr.net/gh/yxw007/BlogPicBed@master//img/20240507114910.png" alt=""></p><p><img src="https://cdn.jsdelivr.net/gh/yxw007/BlogPicBed@master//img/20240507114926.png" alt=""></p><p><img src="https://cdn.jsdelivr.net/gh/yxw007/BlogPicBed@master//img/20240507114940.png" alt=""></p></li></ul><h2 id="推送镜像至仓库" tabindex="-1">推送镜像至仓库 <a class="header-anchor" href="#推送镜像至仓库" aria-hidden="true">#</a></h2><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#676E95;font-style:italic;"># 1. login mirror repository</span></span>
<span class="line"><span style="color:#FFCB6B;">docker</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">login</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">--username=username</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">registry.cn-shenzhen.aliyuncs.com</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># 2. create tag</span></span>
<span class="line"><span style="color:#FFCB6B;">docker</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">tag</span><span style="color:#BABED8;"> [ImageId] registry.cn-shenzhen.aliyuncs.com/xxx/nuxt_demo:</span><span style="color:#89DDFF;">[</span><span style="color:#BABED8;">镜像版本号</span><span style="color:#89DDFF;">]</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># 3. docker push </span></span>
<span class="line"><span style="color:#FFCB6B;">docker</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">push</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">registry.cn-shenzhen.aliyuncs.com/xxx/nuxt_demo:[镜像版本号]</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># 说明：xxx 是镜像仓库的命名空间</span></span>
<span class="line"></span></code></pre></div><h2 id="启动服务" tabindex="-1">启动服务 <a class="header-anchor" href="#启动服务" aria-hidden="true">#</a></h2><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#676E95;font-style:italic;"># docker pull </span></span>
<span class="line"><span style="color:#FFCB6B;">docker</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">pull</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">registry.cn-shenzhen.aliyuncs.com/xxx/nuxt_demo:latest</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># docker start</span></span>
<span class="line"><span style="color:#FFCB6B;">docker</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">run</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">-itd</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">-p</span><span style="color:#BABED8;"> </span><span style="color:#F78C6C;">9001</span><span style="color:#C3E88D;">:3000</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">imageid</span></span>
<span class="line"></span></code></pre></div><h2 id="自动化脚本" tabindex="-1">自动化脚本 <a class="header-anchor" href="#自动化脚本" aria-hidden="true">#</a></h2><ul><li><p>build.sh</p><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#676E95;font-style:italic;">#!/bin/bash</span></span>
<span class="line"></span>
<span class="line"><span style="color:#82AAFF;">echo</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">welcome to local-ubuntu</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#82AAFF;">cd</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">/home/potter/nuxt-demo</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># 拉取最新代码</span></span>
<span class="line"><span style="color:#FFCB6B;">git</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">pull</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># 修改 .npmrc 文件，让其自动确认避免提示确认选择</span></span>
<span class="line"><span style="color:#82AAFF;">echo</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">yes=true</span><span style="color:#89DDFF;">&quot;</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">&gt;&gt;</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">~/.npmrc</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># install pnpm</span></span>
<span class="line"><span style="color:#FFCB6B;">npm</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">install</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">pnpm</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">-g</span><span style="color:#BABED8;"> </span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># install dependency</span></span>
<span class="line"><span style="color:#FFCB6B;">pnpm</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">install</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">--force</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># 步骤 1: 打包镜像</span></span>
<span class="line"><span style="color:#FFCB6B;">docker</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">build</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">-t</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">nuxt-demo</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">.</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">[</span><span style="color:#BABED8;"> $? </span><span style="color:#89DDFF;">-eq</span><span style="color:#BABED8;"> </span><span style="color:#F78C6C;">0</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">];</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;font-style:italic;">then</span></span>
<span class="line"><span style="color:#BABED8;">	  </span><span style="color:#82AAFF;">echo</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">打包成功！</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#BABED8;">  </span><span style="color:#89DDFF;font-style:italic;">else</span></span>
<span class="line"><span style="color:#BABED8;">	    </span><span style="color:#82AAFF;">echo</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">打包失败，请检查输入的信息。</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#BABED8;">	      </span><span style="color:#82AAFF;">exit</span><span style="color:#BABED8;"> </span><span style="color:#F78C6C;">1</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">fi</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># 提供Docker镜像仓库地址、用户名和密码</span></span>
<span class="line"><span style="color:#BABED8;">registry</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">registry.cn-shenzhen.aliyuncs.com</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#BABED8;">username</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">xxx</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#BABED8;">password</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">xxx</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># 使用expect来实现自动登录</span></span>
<span class="line"><span style="color:#FFCB6B;">expect</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">-c</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#C3E88D;">spawn docker login </span><span style="color:#BABED8;">$registry</span></span>
<span class="line"><span style="color:#C3E88D;">expect </span><span style="color:#BABED8;">\\&quot;</span><span style="color:#C3E88D;">Username: </span><span style="color:#BABED8;">\\&quot;</span></span>
<span class="line"><span style="color:#C3E88D;">send </span><span style="color:#BABED8;">\\&quot;$username</span><span style="color:#C3E88D;">\\n</span><span style="color:#BABED8;">\\&quot;</span></span>
<span class="line"><span style="color:#C3E88D;">expect </span><span style="color:#BABED8;">\\&quot;</span><span style="color:#C3E88D;">Password: </span><span style="color:#BABED8;">\\&quot;</span></span>
<span class="line"><span style="color:#C3E88D;">send </span><span style="color:#BABED8;">\\&quot;$password</span><span style="color:#C3E88D;">\\n</span><span style="color:#BABED8;">\\&quot;</span></span>
<span class="line"><span style="color:#C3E88D;">expect </span><span style="color:#BABED8;">\\&quot;</span><span style="color:#C3E88D;">Login Succeeded</span><span style="color:#BABED8;">\\&quot;</span></span>
<span class="line"><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># 检查登录是否成功</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">[</span><span style="color:#BABED8;"> $? </span><span style="color:#89DDFF;">-eq</span><span style="color:#BABED8;"> </span><span style="color:#F78C6C;">0</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">];</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;font-style:italic;">then</span></span>
<span class="line"><span style="color:#BABED8;">	  </span><span style="color:#82AAFF;">echo</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">登录成功！</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#BABED8;">  </span><span style="color:#89DDFF;font-style:italic;">else</span></span>
<span class="line"><span style="color:#BABED8;">	    </span><span style="color:#82AAFF;">echo</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">登录失败，请检查输入的信息。</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#BABED8;">	      </span><span style="color:#82AAFF;">exit</span><span style="color:#BABED8;"> </span><span style="color:#F78C6C;">1</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">fi</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># 给镜像打标签</span></span>
<span class="line"><span style="color:#BABED8;">new_image_id</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">$(</span><span style="color:#FFCB6B;">docker</span><span style="color:#C3E88D;"> images -q nuxt-demo</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#FFCB6B;">docker</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">tag</span><span style="color:#BABED8;"> $new_image_id </span><span style="color:#C3E88D;">registry.cn-shenzhen.aliyuncs.com/e7show/nuxt-demo</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># 检查标签是否成功</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">[</span><span style="color:#BABED8;"> $? </span><span style="color:#89DDFF;">-eq</span><span style="color:#BABED8;"> </span><span style="color:#F78C6C;">0</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">];</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;font-style:italic;">then</span></span>
<span class="line"><span style="color:#BABED8;">	  </span><span style="color:#82AAFF;">echo</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">Docker镜像标签成功！</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#BABED8;">  </span><span style="color:#89DDFF;font-style:italic;">else</span></span>
<span class="line"><span style="color:#BABED8;">	    </span><span style="color:#82AAFF;">echo</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">Docker镜像标签失败。</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#BABED8;">	      </span><span style="color:#82AAFF;">exit</span><span style="color:#BABED8;"> </span><span style="color:#F78C6C;">1</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">fi</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># 推送镜像到远程仓库</span></span>
<span class="line"><span style="color:#FFCB6B;">docker</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">push</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">registry.cn-shenzhen.aliyuncs.com/e7show/nuxt-demo:latest</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># 检查推送是否成功</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">[</span><span style="color:#BABED8;"> $? </span><span style="color:#89DDFF;">-eq</span><span style="color:#BABED8;"> </span><span style="color:#F78C6C;">0</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">];</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;font-style:italic;">then</span></span>
<span class="line"><span style="color:#BABED8;">	  </span><span style="color:#82AAFF;">echo</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">Docker镜像推送成功！</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#BABED8;">  </span><span style="color:#89DDFF;font-style:italic;">else</span></span>
<span class="line"><span style="color:#BABED8;">	    </span><span style="color:#82AAFF;">echo</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">Docker镜像推送失败。</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#BABED8;">	      </span><span style="color:#82AAFF;">exit</span><span style="color:#BABED8;"> </span><span style="color:#F78C6C;">1</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">fi</span></span>
<span class="line"></span>
<span class="line"><span style="color:#82AAFF;">echo</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">全部操作完成。</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"></span></code></pre></div></li><li><p>restart.sh</p><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#82AAFF;">echo</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">welcome 243</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># 步骤 1: pull 最新镜像</span></span>
<span class="line"><span style="color:#FFCB6B;">docker</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">pull</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">registry.cn-shenzhen.aliyuncs.com/e7show/nuxt-demo:latest</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># 步骤 2: 查询并停止旧容器</span></span>
<span class="line"><span style="color:#BABED8;">container_name</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">nuxt-demo</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#BABED8;">container_id</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">$(</span><span style="color:#FFCB6B;">docker</span><span style="color:#C3E88D;"> ps -aqf </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">name=</span><span style="color:#BABED8;">$container_name</span><span style="color:#89DDFF;">&quot;)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">[</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">-n</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#BABED8;">$container_id</span><span style="color:#89DDFF;">&quot;</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">];</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;font-style:italic;">then</span></span>
<span class="line"><span style="color:#BABED8;">    </span><span style="color:#82AAFF;">echo</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">Stopping the existing container: </span><span style="color:#BABED8;">$container_name</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#BABED8;">    </span><span style="color:#FFCB6B;">docker</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">stop</span><span style="color:#BABED8;"> $container_id</span></span>
<span class="line"><span style="color:#BABED8;">    </span><span style="color:#FFCB6B;">docker</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">rm</span><span style="color:#BABED8;"> $container_id</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">fi</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># 步骤 3: 启动容器</span></span>
<span class="line"><span style="color:#BABED8;">image_id</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">$(</span><span style="color:#FFCB6B;">docker</span><span style="color:#C3E88D;"> images </span><span style="color:#89DDFF;">|</span><span style="color:#C3E88D;"> </span><span style="color:#FFCB6B;">grep</span><span style="color:#C3E88D;"> </span><span style="color:#BABED8;">$container_name</span><span style="color:#C3E88D;"> </span><span style="color:#89DDFF;">|</span><span style="color:#C3E88D;"> </span><span style="color:#FFCB6B;">sort</span><span style="color:#C3E88D;"> -k5,5 -r </span><span style="color:#89DDFF;">|</span><span style="color:#C3E88D;"> </span><span style="color:#FFCB6B;">head</span><span style="color:#C3E88D;"> -n </span><span style="color:#F78C6C;">1</span><span style="color:#C3E88D;"> </span><span style="color:#89DDFF;">|</span><span style="color:#C3E88D;"> </span><span style="color:#FFCB6B;">awk</span><span style="color:#C3E88D;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">{print $3}</span><span style="color:#89DDFF;">&#39;)</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">[</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">-n</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#BABED8;">$image_id</span><span style="color:#89DDFF;">&quot;</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">];</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;font-style:italic;">then</span></span>
<span class="line"><span style="color:#BABED8;">    </span><span style="color:#82AAFF;">echo</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">Starting a new container from image: </span><span style="color:#BABED8;">$image_id</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#BABED8;">    </span><span style="color:#FFCB6B;">docker</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">run</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">--name</span><span style="color:#BABED8;"> $container_name </span><span style="color:#C3E88D;">-itd</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">-p</span><span style="color:#BABED8;"> </span><span style="color:#F78C6C;">9001</span><span style="color:#C3E88D;">:3000</span><span style="color:#BABED8;"> $image_id</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">else</span></span>
<span class="line"><span style="color:#BABED8;">    </span><span style="color:#82AAFF;">echo</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">No image found. Build the image first.</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">fi</span></span>
<span class="line"></span></code></pre></div></li><li><p>clean.sh</p><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#676E95;font-style:italic;">#!/bin/bash</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># 定义要清理的镜像名称</span></span>
<span class="line"><span style="color:#BABED8;">image_name</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">registry.cn-shenzhen.aliyuncs.com/e7show/nuxt-demo</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># 获取所有的镜像 ID，根据创建时间进行排序</span></span>
<span class="line"><span style="color:#BABED8;">image_ids</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">$(</span><span style="color:#FFCB6B;">docker</span><span style="color:#C3E88D;"> images </span><span style="color:#89DDFF;">|</span><span style="color:#C3E88D;"> </span><span style="color:#FFCB6B;">grep</span><span style="color:#C3E88D;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#BABED8;">$image_name</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;"> </span><span style="color:#89DDFF;">|</span><span style="color:#C3E88D;"> </span><span style="color:#FFCB6B;">sort</span><span style="color:#C3E88D;"> -k5,5 -r </span><span style="color:#89DDFF;">|</span><span style="color:#C3E88D;"> </span><span style="color:#FFCB6B;">awk</span><span style="color:#C3E88D;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">{print $3}</span><span style="color:#89DDFF;">&#39;)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># 获取镜像数量</span></span>
<span class="line"><span style="color:#BABED8;">image_count</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">$(</span><span style="color:#82AAFF;">echo</span><span style="color:#C3E88D;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#BABED8;">$image_ids</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;"> </span><span style="color:#89DDFF;">|</span><span style="color:#C3E88D;"> </span><span style="color:#FFCB6B;">wc</span><span style="color:#C3E88D;"> -l</span><span style="color:#89DDFF;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># 保留的镜像数</span></span>
<span class="line"><span style="color:#BABED8;">keep_count</span><span style="color:#89DDFF;">=</span><span style="color:#F78C6C;">1</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># 开始清理镜像</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">[</span><span style="color:#BABED8;"> $image_count </span><span style="color:#89DDFF;">-gt</span><span style="color:#BABED8;"> $keep_count </span><span style="color:#89DDFF;">];</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;font-style:italic;">then</span></span>
<span class="line"><span style="color:#BABED8;">  images_to_remove</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">$(</span><span style="color:#82AAFF;">echo</span><span style="color:#C3E88D;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#BABED8;">$image_ids</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;"> </span><span style="color:#89DDFF;">|</span><span style="color:#C3E88D;"> </span><span style="color:#FFCB6B;">tail</span><span style="color:#C3E88D;"> -n +</span><span style="color:#89DDFF;">$((</span><span style="color:#C3E88D;">keep_count </span><span style="color:#89DDFF;">+</span><span style="color:#C3E88D;"> </span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">)))</span></span>
<span class="line"><span style="color:#BABED8;">  </span><span style="color:#82AAFF;">echo</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">delete count: </span><span style="color:#BABED8;">$images_to_remove</span><span style="color:#89DDFF;">&quot;</span><span style="color:#BABED8;">	</span></span>
<span class="line"></span>
<span class="line"><span style="color:#BABED8;">  </span><span style="color:#82AAFF;">echo</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">Cleaning up old </span><span style="color:#BABED8;">$image_name</span><span style="color:#C3E88D;"> images...</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#BABED8;">	      </span></span>
<span class="line"><span style="color:#BABED8;">  </span><span style="color:#89DDFF;font-style:italic;">for</span><span style="color:#BABED8;"> image_id </span><span style="color:#89DDFF;font-style:italic;">in</span><span style="color:#BABED8;"> $images_to_remove</span><span style="color:#89DDFF;">;</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;font-style:italic;">do</span></span>
<span class="line"><span style="color:#BABED8;">    </span><span style="color:#676E95;font-style:italic;">#docker rmi -f $image_id</span></span>
<span class="line"><span style="color:#BABED8;">    </span><span style="color:#82AAFF;">echo</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">remove </span><span style="color:#BABED8;">$image_id</span><span style="color:#C3E88D;"> success</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#BABED8;">  </span><span style="color:#89DDFF;font-style:italic;">done</span></span>
<span class="line"></span>
<span class="line"><span style="color:#BABED8;">  </span><span style="color:#82AAFF;">echo</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">Cleanup complete.</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">else</span></span>
<span class="line"><span style="color:#BABED8;">      </span><span style="color:#82AAFF;">echo</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">No old </span><span style="color:#BABED8;">$image_name</span><span style="color:#C3E88D;"> images to clean up.</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">fi</span></span>
<span class="line"></span></code></pre></div></li></ul><h2 id="参考文献" tabindex="-1">参考文献 <a class="header-anchor" href="#参考文献" aria-hidden="true">#</a></h2><ul><li><a href="https://cr.console.aliyun.com/cn-shenzhen/instance/repositories" target="_blank" rel="noreferrer">https://cr.console.aliyun.com/cn-shenzhen/instance/repositories</a></li><li><strong><a href="https://www.volcengine.com/theme/4033885-Z-7-1" target="_blank" rel="noreferrer">在生产环境中使用Docker注入变量时，Nuxt3的环境变量为空</a></strong></li><li><strong><a href="https://hoa.ro/blog/2020-12-08-draft-docker-time-timezone/" target="_blank" rel="noreferrer">Guide: fix all time and timezone problems in Docker</a></strong></li><li><a href="https://cloud.tencent.com/developer/article/1626811" target="_blank" rel="noreferrer">Docker 时区调整方案-腾讯云开发者社区-腾讯云 (tencent.com)</a></li></ul>`,17),e=[o];function t(c,r,D,y,i,B){return n(),a("div",null,e)}const A=s(p,[["render",t]]);export{E as __pageData,A as default};
