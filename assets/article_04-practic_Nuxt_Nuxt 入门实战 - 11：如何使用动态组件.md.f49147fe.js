import{_ as o,o as l,c as t,a as s,q as p,m as e,C as c,B as n}from"./app.d65ad660.js";const _=JSON.parse('{"title":"Nuxt 入门实战 - 11：如何使用动态组件","description":"","frontmatter":{"title":"Nuxt 入门实战 - 11：如何使用动态组件","author":"Potter","date":"2023-06-26T11:44:45.000Z","tags":["Nuxt"],"categories":["Nuxt 入门实战"]},"headers":[{"level":2,"title":"背景","slug":"背景","link":"#背景","children":[]},{"level":2,"title":"Vue实现demo","slug":"vue实现demo","link":"#vue实现demo","children":[]},{"level":2,"title":"Nuxt 中如何实现?","slug":"nuxt-中如何实现","link":"#nuxt-中如何实现","children":[]},{"level":2,"title":"如何通过字符串动态切换组件?","slug":"如何通过字符串动态切换组件","link":"#如何通过字符串动态切换组件","children":[]},{"level":2,"title":"总结","slug":"总结","link":"#总结","children":[]},{"level":2,"title":"参考文献","slug":"参考文献","link":"#参考文献","children":[]}],"relativePath":"article/04-practic/Nuxt/Nuxt 入门实战 - 11：如何使用动态组件.md","lastUpdated":1715053816000}'),r={name:"article/04-practic/Nuxt/Nuxt 入门实战 - 11：如何使用动态组件.md"},D=n('<h1 id="nuxt-入门实战-11-如何使用动态组件" tabindex="-1">Nuxt 入门实战 - 11：如何使用动态组件 <a class="header-anchor" href="#nuxt-入门实战-11-如何使用动态组件" aria-hidden="true">#</a></h1><hr><h2 id="背景" tabindex="-1">背景 <a class="header-anchor" href="#背景" aria-hidden="true">#</a></h2><p>动态切换组件这是非常常见的需求，比如：hover到导航菜单，不同菜单需要显示内容。那么我们就可以使用component :is 来实现此功能。</p><h2 id="vue实现demo" tabindex="-1">Vue实现demo <a class="header-anchor" href="#vue实现demo" aria-hidden="true">#</a></h2>',5),F=n(`<li><p>App.vue</p><div class="language-json"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#BABED8;">&lt;script setup&gt;</span></span>
<span class="line"><span style="color:#BABED8;">import </span><span style="color:#89DDFF;">{</span><span style="color:#BABED8;"> ref </span><span style="color:#89DDFF;">}</span><span style="color:#BABED8;"> from &#39;vue&#39;</span></span>
<span class="line"><span style="color:#BABED8;">import Comp</span><span style="color:#F78C6C;">1</span><span style="color:#BABED8;"> from &#39;./Comp</span><span style="color:#F78C6C;">1</span><span style="color:#BABED8;">.vue&#39;;</span></span>
<span class="line"><span style="color:#BABED8;">import Comp</span><span style="color:#F78C6C;">2</span><span style="color:#BABED8;"> from &#39;./Comp</span><span style="color:#F78C6C;">2</span><span style="color:#BABED8;">.vue&#39;;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#BABED8;">const b = ref(</span><span style="color:#89DDFF;">false</span><span style="color:#BABED8;">);</span></span>
<span class="line"><span style="color:#BABED8;">&lt;/script&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#BABED8;">&lt;template&gt;</span></span>
<span class="line"><span style="color:#BABED8;">  &lt;button @click=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">b=!b</span><span style="color:#89DDFF;">&quot;</span><span style="color:#BABED8;">&gt; 切换组件 &lt;/button&gt;</span></span>
<span class="line"><span style="color:#BABED8;">  &lt;component :is=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">b?Comp1:Comp2</span><span style="color:#89DDFF;">&quot;</span><span style="color:#BABED8;">&gt;&lt;/component&gt;</span></span>
<span class="line"><span style="color:#BABED8;">&lt;/template&gt;</span></span>
<span class="line"></span></code></pre></div></li><li><p>Comp1.vue</p><div class="language-html"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">template</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#BABED8;">	</span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">div</span><span style="color:#89DDFF;">&gt;</span><span style="color:#BABED8;">组件1</span><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">div</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">template</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"></span></code></pre></div></li>`,2),y=n(`<p>Comp2.vue</p><div class="language-html"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">template</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#BABED8;">	</span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">div</span><span style="color:#89DDFF;">&gt;</span><span style="color:#BABED8;">组件1</span><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">div</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">template</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"></span></code></pre></div>`,2),i=n(`<h2 id="nuxt-中如何实现" tabindex="-1">Nuxt 中如何实现? <a class="header-anchor" href="#nuxt-中如何实现" aria-hidden="true">#</a></h2><ol><li><p>components 创建两个组件，目录结果如下</p><p><img src="https://cdn.jsdelivr.net/gh/yxw007/BlogPicBed@master//img/20240507114845.png" alt=""></p></li><li><p>利用component is 动态使用这2个组件</p><div class="language-html"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">template</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#BABED8;">	</span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">button</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">@click</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">b=!b</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;</span><span style="color:#BABED8;"> 切换组件 </span><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">button</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#BABED8;">  </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">component</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">:is</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">activeNavComName</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;&lt;/</span><span style="color:#F07178;">component</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">template</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">script</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">setup</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;"> </span><span style="color:#BABED8;">NavMenuEffect</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#BABED8;">NavMenuProduct</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">}</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;font-style:italic;">from</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">#components</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#BABED8;"> b </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> </span><span style="color:#82AAFF;">ref</span><span style="color:#BABED8;">(</span><span style="color:#FF9CAC;">false</span><span style="color:#BABED8;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#BABED8;"> activeNavComName </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> </span><span style="color:#82AAFF;">computed</span><span style="color:#BABED8;">(</span><span style="color:#89DDFF;">()</span><span style="color:#BABED8;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#BABED8;"> b</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">value </span><span style="color:#89DDFF;">?</span><span style="color:#BABED8;"> NavMenuEffect </span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> NavMenuProduct)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">script</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"></span></code></pre></div><blockquote><p>说明：这是个简单demo虽然实现了，但是还是不够灵活。是否能够通过组件名来动态切换呢？ 答案：可以的</p></blockquote></li></ol><h2 id="如何通过字符串动态切换组件" tabindex="-1">如何通过字符串动态切换组件? <a class="header-anchor" href="#如何通过字符串动态切换组件" aria-hidden="true">#</a></h2><ol><li><p>修改nuxt.config.ts 来增加组件扫描规则，让以上2个组件变成全局组件</p><div class="language-tsx"><button title="Copy Code" class="copy"></button><span class="lang">tsx</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#676E95;font-style:italic;">//nuxt.config.ts</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">export</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;font-style:italic;">default</span><span style="color:#BABED8;"> </span><span style="color:#82AAFF;">defineNuxtConfig</span><span style="color:#BABED8;">(</span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#89DDFF;">...</span></span>
<span class="line"><span style="color:#BABED8;">components: [</span></span>
<span class="line"><span style="color:#BABED8;">		</span><span style="color:#89DDFF;">...</span></span>
<span class="line"><span style="color:#BABED8;">		</span><span style="color:#89DDFF;">{</span><span style="color:#BABED8;"> </span><span style="color:#F07178;">path</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">~/components/NavMenu</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;"> </span><span style="color:#F07178;">global</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> </span><span style="color:#FF9CAC;">true</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">},</span></span>
<span class="line"><span style="color:#BABED8;">		</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">~/components</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#BABED8;">		</span><span style="color:#89DDFF;">...</span></span>
<span class="line"><span style="color:#BABED8;">]</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#89DDFF;">...</span></span>
<span class="line"><span style="color:#89DDFF;">}</span><span style="color:#BABED8;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span></code></pre></div></li><li><p>利用vue3给我们提供的resolveComponent来实现通过名称找到对应的组件</p><div class="language-html"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">template</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#BABED8;">	</span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">button</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">@click</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">b=!b</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;</span><span style="color:#BABED8;"> 切换组件 </span><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">button</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#BABED8;">  </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">component</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">:is</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">activeNavComName</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;&lt;/</span><span style="color:#F07178;">component</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">template</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">script</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">setup</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#BABED8;"> b </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> </span><span style="color:#82AAFF;">ref</span><span style="color:#BABED8;">(</span><span style="color:#FF9CAC;">false</span><span style="color:#BABED8;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#BABED8;"> activeNavComName </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> </span><span style="color:#82AAFF;">computed</span><span style="color:#BABED8;">(</span><span style="color:#89DDFF;">()</span><span style="color:#BABED8;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#BABED8;"> </span><span style="color:#82AAFF;">resolveComponent</span><span style="color:#BABED8;">(b</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">value </span><span style="color:#89DDFF;">?</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">NavMenuEffect</span><span style="color:#89DDFF;">&quot;</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">NavMenuProduct</span><span style="color:#89DDFF;">&quot;</span><span style="color:#BABED8;">))</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">script</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"></span></code></pre></div></li></ol><h2 id="总结" tabindex="-1">总结 <a class="header-anchor" href="#总结" aria-hidden="true">#</a></h2><ul><li>直接引入组件，配合component is 可以简单的需求</li><li>如果想要更多的灵活性，就可以通过全局注册组件，然后通过resolveComponent解析成组件，最后配合component is 来使用</li></ul><h2 id="参考文献" tabindex="-1">参考文献 <a class="header-anchor" href="#参考文献" aria-hidden="true">#</a></h2><ul><li><strong><a href="https://stackoverflow.com/questions/73025338/i-cant-use-dynamic-components-in-nuxt-3" target="_blank" rel="noreferrer">I can&#39;t use dynamic components in Nuxt 3</a></strong></li></ul>`,8);function B(a,u,d,A,E,m){return l(),t("div",null,[D,s("ul",null,[F,s("li",null,[y,s("blockquote",null,[s("p",null,[s("strong",null,[p("特别注意："),(l(),e(c(a.b?a.Comp1:a.Comp2))),p(" 引用的是组件而不是组件名称")])])])])]),i])}const g=o(r,[["render",B]]);export{_ as __pageData,g as default};
