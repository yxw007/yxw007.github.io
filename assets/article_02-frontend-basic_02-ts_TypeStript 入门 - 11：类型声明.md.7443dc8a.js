import{_ as s,o as n,c as a,B as l}from"./app.6d4f2e95.js";const d=JSON.parse('{"title":"TypeStript 入门 - 11：类型声明","description":"","frontmatter":{"title":"TypeStript 入门 - 11：类型声明","author":"Potter","date":"2022-11-28 22:00","tags":["TypeScript"],"categories":["TypeScript 入门"]},"headers":[{"level":2,"title":"声明全局类型","slug":"声明全局类型","link":"#声明全局类型","children":[]},{"level":2,"title":"使用第三方库，编写声明","slug":"使用第三方库-编写声明","link":"#使用第三方库-编写声明","children":[{"level":3,"title":"通过cdn引入第三方库，比如：jquery手动编写声明","slug":"通过cdn引入第三方库-比如-jquery手动编写声明","link":"#通过cdn引入第三方库-比如-jquery手动编写声明","children":[]},{"level":3,"title":"通过webpack 使用第三方库，比如：jQuery手动编写声明","slug":"通过webpack-使用第三方库-比如-jquery手动编写声明","link":"#通过webpack-使用第三方库-比如-jquery手动编写声明","children":[]},{"level":3,"title":"创建类型声明文件.d.ts，将相关类型声明放到一个独立文件，这样使代码更加整洁(推荐方式)","slug":"创建类型声明文件-d-ts-将相关类型声明放到一个独立文件-这样使代码更加整洁-推荐方式","link":"#创建类型声明文件-d-ts-将相关类型声明放到一个独立文件-这样使代码更加整洁-推荐方式","children":[]},{"level":3,"title":"第三方声明文件","slug":"第三方声明文件","link":"#第三方声明文件","children":[]}]}],"relativePath":"article/02-frontend-basic/02-ts/TypeStript 入门 - 11：类型声明.md","lastUpdated":1712743479000}'),p={name:"article/02-frontend-basic/02-ts/TypeStript 入门 - 11：类型声明.md"},o=l(`<h1 id="typestript-入门-11-类型声明" tabindex="-1">TypeStript 入门 - 11：类型声明 <a class="header-anchor" href="#typestript-入门-11-类型声明" aria-hidden="true">#</a></h1><h2 id="声明全局类型" tabindex="-1">声明全局类型 <a class="header-anchor" href="#声明全局类型" aria-hidden="true">#</a></h2><div class="language-tsx"><button title="Copy Code" class="copy"></button><span class="lang">tsx</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#676E95;font-style:italic;">//! 声明全局类型</span></span>
<span class="line"><span style="color:#C792EA;">declare</span><span style="color:#BABED8;"> </span><span style="color:#C792EA;">let</span><span style="color:#BABED8;"> age</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> </span><span style="color:#FFCB6B;">number</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#C792EA;">declare</span><span style="color:#BABED8;"> </span><span style="color:#C792EA;">function</span><span style="color:#BABED8;"> </span><span style="color:#82AAFF;">sum</span><span style="color:#89DDFF;">(</span><span style="color:#BABED8;font-style:italic;">a</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> </span><span style="color:#FFCB6B;">string</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;"> </span><span style="color:#BABED8;font-style:italic;">b</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> </span><span style="color:#FFCB6B;">string</span><span style="color:#89DDFF;">):</span><span style="color:#BABED8;"> </span><span style="color:#FFCB6B;">void</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#C792EA;">declare</span><span style="color:#BABED8;"> </span><span style="color:#C792EA;">class</span><span style="color:#BABED8;"> </span><span style="color:#FFCB6B;">Animal</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">{</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">};</span></span>
<span class="line"><span style="color:#C792EA;">declare</span><span style="color:#BABED8;"> </span><span style="color:#C792EA;">const</span><span style="color:#BABED8;"> </span><span style="color:#C792EA;">enum</span><span style="color:#BABED8;"> </span><span style="color:#FFCB6B;">Seaons</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#BABED8;">	Spring</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#BABED8;">	Summer</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#BABED8;">	Autumn</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#BABED8;">	Winter</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#C792EA;">declare</span><span style="color:#BABED8;"> </span><span style="color:#C792EA;">interface</span><span style="color:#BABED8;"> </span><span style="color:#FFCB6B;">Person</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#BABED8;">	</span><span style="color:#F07178;">name</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> </span><span style="color:#FFCB6B;">string</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#BABED8;">	</span><span style="color:#F07178;">age</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> </span><span style="color:#FFCB6B;">number</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">//类型声明在编译的时候都会被删除，不会影响真正的代码。目的：是不用重构原有的js代码，TS能支持支持</span></span>
<span class="line"></span></code></pre></div><h2 id="使用第三方库-编写声明" tabindex="-1">使用第三方库，编写声明 <a class="header-anchor" href="#使用第三方库-编写声明" aria-hidden="true">#</a></h2><h3 id="通过cdn引入第三方库-比如-jquery手动编写声明" tabindex="-1">通过cdn引入第三方库，比如：jquery手动编写声明 <a class="header-anchor" href="#通过cdn引入第三方库-比如-jquery手动编写声明" aria-hidden="true">#</a></h3><div class="language-tsx"><button title="Copy Code" class="copy"></button><span class="lang">tsx</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#676E95;font-style:italic;">//! 使用场景：通过cdn引入，声明全局jquery方法</span></span>
<span class="line"><span style="color:#C792EA;">declare</span><span style="color:#BABED8;"> </span><span style="color:#C792EA;">const</span><span style="color:#BABED8;"> $</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">(</span><span style="color:#BABED8;font-style:italic;">selector</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> </span><span style="color:#FFCB6B;">string</span><span style="color:#89DDFF;">)</span><span style="color:#BABED8;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#BABED8;">	</span><span style="color:#F07178;">height</span><span style="color:#89DDFF;">(</span><span style="color:#BABED8;font-style:italic;">num</span><span style="color:#89DDFF;">?:</span><span style="color:#BABED8;"> </span><span style="color:#FFCB6B;">number</span><span style="color:#89DDFF;">):</span><span style="color:#BABED8;"> </span><span style="color:#FFCB6B;">void</span></span>
<span class="line"><span style="color:#BABED8;">	</span><span style="color:#F07178;">width</span><span style="color:#89DDFF;">(</span><span style="color:#BABED8;font-style:italic;">num</span><span style="color:#89DDFF;">?:</span><span style="color:#BABED8;"> </span><span style="color:#FFCB6B;">number</span><span style="color:#89DDFF;">):</span><span style="color:#BABED8;"> </span><span style="color:#FFCB6B;">void</span></span>
<span class="line"><span style="color:#89DDFF;">};</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">//! 声明后，此时就可以调用jquery中的方法，其他库也是类似的，如果没有.d.ts文件，可这样声明一下即可避免报错</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">//!（注意：一般库都提供了.d.ts文件，所以不用自己手动写）</span></span>
<span class="line"><span style="color:#82AAFF;">$</span><span style="color:#BABED8;">(</span><span style="color:#89DDFF;">&#39;&#39;</span><span style="color:#BABED8;">)</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">height</span><span style="color:#BABED8;">()</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span></code></pre></div><h3 id="通过webpack-使用第三方库-比如-jquery手动编写声明" tabindex="-1">通过webpack 使用第三方库，比如：jQuery手动编写声明 <a class="header-anchor" href="#通过webpack-使用第三方库-比如-jquery手动编写声明" aria-hidden="true">#</a></h3><div class="language-tsx"><button title="Copy Code" class="copy"></button><span class="lang">tsx</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#676E95;font-style:italic;">//! 使用场景：通过webpack 使用jQuery，进行声明</span></span>
<span class="line"><span style="color:#C792EA;">declare</span><span style="color:#BABED8;"> </span><span style="color:#C792EA;">namespace</span><span style="color:#BABED8;"> </span><span style="color:#FFCB6B;">jQuery</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#89DDFF;">	</span><span style="color:#676E95;font-style:italic;">//! 注意：namespace 内的声明 无需添加declare</span></span>
<span class="line"><span style="color:#F07178;">	</span><span style="color:#C792EA;">function</span><span style="color:#F07178;"> </span><span style="color:#82AAFF;">ajax</span><span style="color:#89DDFF;">(</span><span style="color:#BABED8;font-style:italic;">url</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#FFCB6B;">string</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#BABED8;font-style:italic;">otpions</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#FFCB6B;">object</span><span style="color:#89DDFF;">):</span><span style="color:#F07178;"> </span><span style="color:#FFCB6B;">void</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">	</span><span style="color:#C792EA;">namespace</span><span style="color:#F07178;"> </span><span style="color:#FFCB6B;">fn</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">		</span><span style="color:#C792EA;">function</span><span style="color:#F07178;"> </span><span style="color:#82AAFF;">extend</span><span style="color:#89DDFF;">(</span><span style="color:#BABED8;font-style:italic;">obj</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#FFCB6B;">object</span><span style="color:#89DDFF;">):</span><span style="color:#F07178;"> </span><span style="color:#FFCB6B;">void</span></span>
<span class="line"><span style="color:#F07178;">	}</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#BABED8;">jQuery</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">ajax</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">/</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{}</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#BABED8;">jQuery</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">fn</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">extend</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">{}</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span></code></pre></div><h3 id="创建类型声明文件-d-ts-将相关类型声明放到一个独立文件-这样使代码更加整洁-推荐方式" tabindex="-1">创建类型声明文件.d.ts，将相关类型声明放到一个独立文件，这样使代码更加整洁(推荐方式) <a class="header-anchor" href="#创建类型声明文件-d-ts-将相关类型声明放到一个独立文件-这样使代码更加整洁-推荐方式" aria-hidden="true">#</a></h3><div class="language-tsx"><button title="Copy Code" class="copy"></button><span class="lang">tsx</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#676E95;font-style:italic;">//! 说明：可以把jquery声明，单独放置一个单独的声明文件中jquery.d.ts</span></span>
<span class="line"><span style="color:#C792EA;">declare</span><span style="color:#BABED8;"> </span><span style="color:#C792EA;">const</span><span style="color:#BABED8;"> $</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">(</span><span style="color:#BABED8;font-style:italic;">selector</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> </span><span style="color:#FFCB6B;">string</span><span style="color:#89DDFF;">)</span><span style="color:#BABED8;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#BABED8;">	</span><span style="color:#F07178;">height</span><span style="color:#89DDFF;">(</span><span style="color:#BABED8;font-style:italic;">num</span><span style="color:#89DDFF;">?:</span><span style="color:#BABED8;"> </span><span style="color:#FFCB6B;">number</span><span style="color:#89DDFF;">):</span><span style="color:#BABED8;"> </span><span style="color:#FFCB6B;">void</span></span>
<span class="line"><span style="color:#BABED8;">	</span><span style="color:#F07178;">width</span><span style="color:#89DDFF;">(</span><span style="color:#BABED8;font-style:italic;">num</span><span style="color:#89DDFF;">?:</span><span style="color:#BABED8;"> </span><span style="color:#FFCB6B;">number</span><span style="color:#89DDFF;">):</span><span style="color:#BABED8;"> </span><span style="color:#FFCB6B;">void</span></span>
<span class="line"><span style="color:#89DDFF;">};</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">declare</span><span style="color:#BABED8;"> </span><span style="color:#C792EA;">namespace</span><span style="color:#BABED8;"> </span><span style="color:#FFCB6B;">jQuery</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">	</span><span style="color:#C792EA;">function</span><span style="color:#F07178;"> </span><span style="color:#82AAFF;">ajax</span><span style="color:#89DDFF;">(</span><span style="color:#BABED8;font-style:italic;">url</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#FFCB6B;">string</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#BABED8;font-style:italic;">otpions</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#FFCB6B;">object</span><span style="color:#89DDFF;">):</span><span style="color:#F07178;"> </span><span style="color:#FFCB6B;">void</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">	</span><span style="color:#C792EA;">namespace</span><span style="color:#F07178;"> </span><span style="color:#FFCB6B;">fn</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">		</span><span style="color:#C792EA;">function</span><span style="color:#F07178;"> </span><span style="color:#82AAFF;">extend</span><span style="color:#89DDFF;">(</span><span style="color:#BABED8;font-style:italic;">obj</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#FFCB6B;">object</span><span style="color:#89DDFF;">):</span><span style="color:#F07178;"> </span><span style="color:#FFCB6B;">void</span></span>
<span class="line"><span style="color:#F07178;">	}</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div><p>让ts能自动识别类型声明文件，修改tsconfig.js配置</p><div class="language-tsx"><button title="Copy Code" class="copy"></button><span class="lang">tsx</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">	</span><span style="color:#89DDFF;">...</span></span>
<span class="line"><span style="color:#F07178;">	</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">paths</span><span style="color:#89DDFF;">&quot;</span><span style="color:#F07178;">: </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;"> </span></span>
<span class="line"><span style="color:#F07178;">		</span><span style="color:#89DDFF;">&quot;</span><span style="color:#F07178;">*</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> [ </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">**/*.d.ts</span><span style="color:#89DDFF;">&quot;</span><span style="color:#F07178;">]</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#F07178;">	</span><span style="color:#89DDFF;">},</span></span>
<span class="line"><span style="color:#F07178;">	</span><span style="color:#89DDFF;">...</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div><h3 id="第三方声明文件" tabindex="-1"><strong><strong>第三方声明文件</strong></strong> <a class="header-anchor" href="#第三方声明文件" aria-hidden="true">#</a></h3><blockquote><p>约定声明库前缀为@types，所有第三方声明的类型库都以@types/xxx开头</p></blockquote><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#FFCB6B;">npm</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">install</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">@types/jquery</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">-S</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">#等安装完后,使用jquery时默认会查找node_modules/@types/jquery/index.d.ts 文件</span></span>
<span class="line"></span></code></pre></div><p><strong>查找规范：先从package.json中types找，找不到再找node_modules/@types/jquery/index.d.ts</strong></p><ol><li>node_modules/jquery/package.json 中的types字段</li><li>node_modules/jquery/index.d.ts</li><li>node_modules/@types/jquery/index.d.ts</li></ol>`,17),e=[o];function t(c,r,y,F,D,i){return n(),a("div",null,e)}const A=s(p,[["render",t]]);export{d as __pageData,A as default};
