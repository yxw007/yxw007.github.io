import{_ as e,c as t,o as i,a7 as a}from"./chunks/framework.GnyprNw9.js";const _=JSON.parse('{"title":"VueRouter 核心原理","description":"","frontmatter":{"title":"VueRouter 核心原理","author":"Potter","date":"2022-11-02 11:23","tags":["路由","VueRouter"],"categories":["VueRouter"]},"headers":[],"relativePath":"article/03-framework/02-vueRouter/VueRouter-核心原理.md","filePath":"article/03-framework/02-vueRouter/VueRouter-核心原理.md","lastUpdated":1719974778000}'),s={name:"article/03-framework/02-vueRouter/VueRouter-核心原理.md"},r=a(`<h1 id="vuerouter-核心原理" tabindex="-1">VueRouter 核心原理 <a class="header-anchor" href="#vuerouter-核心原理" aria-label="Permalink to &quot;VueRouter 核心原理&quot;">​</a></h1><h2 id="核心流程" tabindex="-1">核心流程 <a class="header-anchor" href="#核心流程" aria-label="Permalink to &quot;核心流程&quot;">​</a></h2><p><img src="https://cdn.jsdelivr.net/gh/yxw007/BlogPicBed@master/img/20220417221815.jpg" alt="https://cdn.jsdelivr.net/gh/yxw007/BlogPicBed@master/img/20220417221815.jpg"></p><h2 id="工作流程" tabindex="-1">工作流程 <a class="header-anchor" href="#工作流程" aria-label="Permalink to &quot;工作流程&quot;">​</a></h2><ol><li>监听路由变化： <ol><li><strong>hash模式：通过window.addEventListener(hashchange) 监听hash值变化</strong></li><li><strong>history模式：window.addEventListener(&#39;popstate&#39;)来监听路径变化</strong></li></ol></li><li>路由数据转换收集 <ol><li>创建Matcher：循环递归构建path与匹配记录收集至pathMap</li></ol></li><li>渲染router-view：根据当前的$route 匹配组件渲染</li><li>路由跳转： <ol><li><p>利用router.match 匹配path 对应的记录</p></li><li><p>安装history监听函数</p></li><li><p>将响应式的app._route 重新赋值为新newRoute（此时触发set→render函数，从而导致页面刷新）</p><div class="language-jsx vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">jsx</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//install.js</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Vue.util.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">defineReactive</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">this</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;_route&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">this</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">._router.history.current)</span></span></code></pre></div></li></ol></li></ol>`,5),l=[r];function o(n,h,p,d,u,c){return i(),t("div",null,l)}const g=e(s,[["render",o]]);export{_ as __pageData,g as default};
