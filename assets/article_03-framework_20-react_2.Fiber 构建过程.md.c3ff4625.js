import{_ as s,o as a,c as l,B as n}from"./app.292b1857.js";const h=JSON.parse('{"title":"2.Fiber 构建过程","description":"","frontmatter":{"title":"2.Fiber 构建过程","author":"Potter","date":"2024-04-15T10:21:34.000Z","tags":["react"],"categories":["react18"]},"headers":[{"level":2,"title":"例子","slug":"例子","link":"#例子","children":[]},{"level":2,"title":"第一阶段：深度前序遍历构建Fiber树","slug":"第一阶段-深度前序遍历构建fiber树","link":"#第一阶段-深度前序遍历构建fiber树","children":[]},{"level":2,"title":"第二阶段：从第一阶段的最后位置开始深度后序遍历树，完成工作单元","slug":"第二阶段-从第一阶段的最后位置开始深度后序遍历树-完成工作单元","link":"#第二阶段-从第一阶段的最后位置开始深度后序遍历树-完成工作单元","children":[]},{"level":2,"title":"简化过程","slug":"简化过程","link":"#简化过程","children":[]},{"level":2,"title":"总结","slug":"总结","link":"#总结","children":[]}],"relativePath":"article/03-framework/20-react/2.Fiber 构建过程.md","lastUpdated":1717411168000}'),e={name:"article/03-framework/20-react/2.Fiber 构建过程.md"},o=n(`<h1 id="_2-react18-fiber-构建过程" tabindex="-1">2. React18 - Fiber 构建过程 <a class="header-anchor" href="#_2-react18-fiber-构建过程" aria-hidden="true">#</a></h1><hr><h2 id="例子" tabindex="-1">例子 <a class="header-anchor" href="#例子" aria-hidden="true">#</a></h2><div class="language-jsx"><button title="Copy Code" class="copy"></button><span class="lang">jsx</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;"> </span><span style="color:#BABED8;">createRoot</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">}</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;font-style:italic;">from</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">react-dom/client</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#C792EA;">let</span><span style="color:#BABED8;"> element </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> (</span></span>
<span class="line"><span style="color:#BABED8;">  </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">div</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#BABED8;">    </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">h1</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#BABED8;">      hello</span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">span</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">style</span><span style="color:#89DDFF;">={{</span><span style="color:#BABED8;"> </span><span style="color:#F07178;">color</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">red</span><span style="color:#89DDFF;">&quot;</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">}}&gt;</span><span style="color:#BABED8;">world</span><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">span</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#BABED8;">    </span><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">h1</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#BABED8;">  </span><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">div</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#BABED8;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#BABED8;"> root </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> </span><span style="color:#82AAFF;">createRoot</span><span style="color:#BABED8;">(document</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">getElementById</span><span style="color:#BABED8;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">root</span><span style="color:#89DDFF;">&quot;</span><span style="color:#BABED8;">))</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#BABED8;">root</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">render</span><span style="color:#BABED8;">(element)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span></code></pre></div><h2 id="第一阶段-深度前序遍历构建fiber树" tabindex="-1"><strong>第一阶段：深度前序遍历构建Fiber树</strong> <a class="header-anchor" href="#第一阶段-深度前序遍历构建fiber树" aria-hidden="true">#</a></h2><p><img src="https://cdn.jsdelivr.net/gh/yxw007/BlogPicBed@master//img/20240410182614.jpeg" alt=""></p><blockquote><p>说明：从上到下进行阅读</p></blockquote><h2 id="第二阶段-从第一阶段的最后位置开始深度后序遍历树-完成工作单元" tabindex="-1"><strong>第二阶段：从第一阶段的最后位置开始深度后序遍历树，完成工作单元</strong> <a class="header-anchor" href="#第二阶段-从第一阶段的最后位置开始深度后序遍历树-完成工作单元" aria-hidden="true">#</a></h2><p><img src="https://cdn.jsdelivr.net/gh/yxw007/BlogPicBed@master//img/20240410182626.jpeg" alt=""></p><blockquote><p>说明：图从左到右，从上到下进行阅读</p></blockquote><h2 id="简化过程" tabindex="-1">简化过程 <a class="header-anchor" href="#简化过程" aria-hidden="true">#</a></h2><p><img src="https://cdn.jsdelivr.net/gh/yxw007/BlogPicBed@master//img/20240410182642.jpeg" alt=""></p><p>日志输出看执行顺序</p><p><img src="https://cdn.jsdelivr.net/gh/yxw007/BlogPicBed@master//img/20240410182650.png" alt=""></p><h2 id="总结" tabindex="-1">总结 <a class="header-anchor" href="#总结" aria-hidden="true">#</a></h2><ol><li>根据序号开始构建</li><li>先构建HostRootFiber 和RootRootNode</li><li>其次构建alternate HostRootFiber</li><li>然后就是遍历Fiber树，按前序深度优先对每个节点遍历进行Process</li><li>最后从深度构建完成是workInProcess位置，进行深度后序遍历对每个节点完成工作单元</li></ol>`,16),t=[o];function p(r,c,i,D,F,y){return a(),l("div",null,t)}const B=s(e,[["render",p]]);export{h as __pageData,B as default};
