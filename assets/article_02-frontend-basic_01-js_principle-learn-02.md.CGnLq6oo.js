import{_ as e,c as a,o as t,a4 as r}from"./chunks/framework.CSXI9Sei.js";const f=JSON.parse('{"title":"响应式核心原理","description":"","frontmatter":{"title":"响应式核心原理","author":"Potter","date":"2022-05-12 18:42","tags":["Proxy","watchEffect","dep","Reflect"],"categories":["响应式原理"]},"headers":[],"relativePath":"article/02-frontend-basic/01-js/principle-learn-02.md","filePath":"article/02-frontend-basic/01-js/principle-learn-02.md","lastUpdated":1721188607000}'),l={name:"article/02-frontend-basic/01-js/principle-learn-02.md"},i=r('<h1 id="响应式核心原理" tabindex="-1">响应式核心原理 <a class="header-anchor" href="#响应式核心原理" aria-label="Permalink to &quot;响应式核心原理&quot;">​</a></h1><hr><blockquote><p>由于Vue3 Reactive源码涉及的代码较多，给初学者学习带来一定的门槛，所以尤大讲解的最核心的响应式demo来讲解响应式核心原理实现</p></blockquote><h2 id="核心原理-流转图" tabindex="-1">核心原理-流转图 <a class="header-anchor" href="#核心原理-流转图" aria-label="Permalink to &quot;核心原理-流转图&quot;">​</a></h2><hr><h2 id="概要内容" tabindex="-1">概要内容 <a class="header-anchor" href="#概要内容" aria-label="Permalink to &quot;概要内容&quot;">​</a></h2><p><img src="https://cdn.jsdelivr.net/gh/yxw007/BlogPicBed@master/img/20210726223603.jpg" alt="https://cdn.jsdelivr.net/gh/yxw007/BlogPicBed@master/img/20210726223603.jpg"></p><hr><h3 id="疑问解答" tabindex="-1">疑问解答 <a class="header-anchor" href="#疑问解答" aria-label="Permalink to &quot;疑问解答&quot;">​</a></h3><ul><li>为啥要用proxy拦截? ( 请阅读：<a href="https://yanxuewen.cn/2021/07/17/principle-learn-01/" target="_blank" rel="noreferrer">响应式根基：Object.defineProperty 与 Proxy 拦截区别</a> )</li><li>为啥要用WeakMap？ <ul><li>原因：可被垃圾回收器自动回收，而Map不会被垃圾回收器自动回收，需要手动清理。否则会造成内存泄漏</li></ul></li><li>为啥要用Reflect获取对象属性和设置对象属性？ <ul><li>原因1：保证不管存不存在原型链继承，都能保存操作正确。</li><li>原因2：语义更明确，避免异常抛出等</li></ul></li></ul><hr><h3 id="流转步骤讲解" tabindex="-1">流转步骤讲解 <a class="header-anchor" href="#流转步骤讲解" aria-label="Permalink to &quot;流转步骤讲解&quot;">​</a></h3><h2 id="总结" tabindex="-1">总结 <a class="header-anchor" href="#总结" aria-label="Permalink to &quot;总结&quot;">​</a></h2><ul><li>watchEffect : 暂存当前匿名函数</li><li>proxy：对象访问拦截</li><li>dep：依赖收集</li></ul><blockquote><p>demo 源码：<a href="https://github.com/yxw007/vue-principle-learn/blob/master/vue-3-min/reactivity/reactivity.html" target="_blank" rel="noreferrer">vue-principle-learn</a></p></blockquote><blockquote><p>为了方便记牢响应式原理，记住这3个角色便于以后快速回忆起响应式原理。</p></blockquote><h2 id="参考文献" tabindex="-1">参考文献 <a class="header-anchor" href="#参考文献" aria-label="Permalink to &quot;参考文献&quot;">​</a></h2><ul><li><a href="https://www.bilibili.com/video/BV1rC4y187Vw" target="_blank" rel="noreferrer">【课程】Vue 3 Deep Dive with Evan You 【中英字幕】- Vue Mastery</a></li></ul>',18),o=[i];function n(c,h,s,d,p,u){return t(),a("div",null,o)}const _=e(l,[["render",n]]);export{f as __pageData,_ as default};
