import{_ as e,c as t,o as a,a4 as r}from"./chunks/framework.CSXI9Sei.js";const T=JSON.parse('{"title":"TypeScript 入门 - 03：Type和Interface 使用场景","description":"","frontmatter":{"title":"TypeScript 入门 - 03：Type和Interface 使用场景","author":"Potter","date":"2022-05-14 21:40","tags":["TypeScript"],"categories":["TypeScript 入门"]},"headers":[],"relativePath":"article/02-frontend-basic/02-ts/TypeScript 入门 - 03：Type和Interface 使用场景.md","filePath":"article/02-frontend-basic/02-ts/TypeScript 入门 - 03：Type和Interface 使用场景.md","lastUpdated":1721027606000}'),i={name:"article/02-frontend-basic/02-ts/TypeScript 入门 - 03：Type和Interface 使用场景.md"},c=r('<h1 id="typescript-入门-03-type和interface-使用场景" tabindex="-1">TypeScript 入门 - 03：Type和Interface 使用场景 <a class="header-anchor" href="#typescript-入门-03-type和interface-使用场景" aria-label="Permalink to &quot;TypeScript 入门 - 03：Type和Interface 使用场景&quot;">​</a></h1><h2 id="使用类型别名的场景" tabindex="-1">使用类型别名的场景 <a class="header-anchor" href="#使用类型别名的场景" aria-label="Permalink to &quot;使用类型别名的场景&quot;">​</a></h2><ul><li>定义基本类型的别名时，使用type</li><li>定义元组类型时，使用type</li><li>定义函数类型时，使用type</li><li>定义联合类型时，使用type</li><li>定义映射类型时，使用type</li></ul><h2 id="使用接口的场景" tabindex="-1">使用接口的场景 <a class="header-anchor" href="#使用接口的场景" aria-label="Permalink to &quot;使用接口的场景&quot;">​</a></h2><ul><li>需要利用接口自动合并特性的时候，使用interface</li><li>定义对象类型且无需使用type 的时候，使用interface</li></ul>',5),p=[c];function n(l,o,_,s,d,y){return a(),t("div",null,p)}const h=e(i,[["render",n]]);export{T as __pageData,h as default};
